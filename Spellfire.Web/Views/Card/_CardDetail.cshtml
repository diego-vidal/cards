@using Spellfire.Model
@model Spellfire.Web.Models.HomeViewModel

@{
    var card = Model.SelectedCard;

    if (card == null)
    {
    <div style="padding-top: 10px;">
        <span style="color: red;">No card was found!</span>
    </div>
        return;
    }

    var totalCards = 3919;
    var nextId = card.SequenceNumber >= totalCards ? 1 : card.SequenceNumber + 1;
    var prevId = card.SequenceNumber <= 1 ? totalCards : card.SequenceNumber - 1;

    ViewBag.Title = card.Name;
}

<div id="card">
    @if (card.CardKinds.Any(x => x.KindKey == KindKey.Rule))
    {
        Html.RenderPartial("_CardRule", card);
    }
    else if (card.CardKinds.Any(x => x.KindKey == KindKey.Dungeon))
    {
        Html.RenderPartial("_CardDungeon", card);
    }
    else
    {
        Html.RenderPartial("_CardVertical", card);
    }
</div>

@*<table class="table table-striped table-bordered details">
    <tr>
        <td>@Html.ActionLink("< Prev", "Details", "Card", htmlAttributes: new { id = @prevId, @class = "btn btn-small btn-primary" })</td>
        <td>@Html.ActionLink("Next >", "Details", "Card", htmlAttributes: new { id = @nextId, @class = "btn btn-small btn-primary" })</td>
    </tr>
    <tr>
        <td>Types</td>
        <td>@card.KindsCsv</td>
    </tr>
    <tr>
        <td>Attributes</td>
        <td>@card.AttributesCsv</td>
    </tr>
    <tr>
        <td>Phases</td>
        <td>@card.PhasesCsv</td>
    </tr>
</table>*@

